extends layout

block scripts

	script

		var Thing = function() {

			var handlers = [];

			this.onChange = function(handler) {
				handlers.push(handler);
			};

			this.change = function(value) {
				for (var i = 0, length = handlers.length; i < length; i++) {
					handlers[i](value);
				}
			};
		};

		var DependantThing = function(a, b, func) {

			var handlers = [];

			var aVal = undefined;
			var bVal = undefined;

			this.onChange = function(handler) {
				handlers.push(handler);
			};

			var change = function(value) {
				for (var i = 0, length = handlers.length; i < length; i++) {
					handlers[i](value);
				}
			};

			a.onChange(function(value) {
				aVal = value;
				change(func(aVal, bVal));
			});

			b.onChange(function(value) {
				bVal = value;
				change(func(aVal, bVal));
			});
		};

	script

		// a = something that can change

		var a = new Rx.Subject();
		var b = new Rx.Subject();
		var c = Rx.Observable.combineLatest(a, b, function(a, b) {
				return a + b;
			});

		a.subscribe(function(value) {
				console.log('a =', value);
			});

		b.subscribe(function(value) {
				console.log('b =', value);
			});

		c.subscribe(function(value) {
				console.log('c = a + b =', value);
			});

		a.onNext(0);
		b.onNext(0);

		b.onNext(1.5);
		a.onNext(2.7);